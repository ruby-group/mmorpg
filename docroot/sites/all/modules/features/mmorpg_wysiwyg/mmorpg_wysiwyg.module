<?php
/**
 * @file
 * Code for the MMORPG WYSIWYG feature.
 */

include_once 'mmorpg_wysiwyg.features.inc';

/**
 * Implementation of hook_shortcode_info().
 */
function mmorpg_wysiwyg_shortcode_info() {
  $shortcodes = array();

  $shortcodes['poll'] = array(
    'title' => t('Add poll'),
    'description' => t('Creates a poll.'),
    'default settings' => array(),
    'process callback' => 'mmorpg_wysiwyg_plugin_shortcode_poll',
    'tips callback' => 'mmorpg_wysiwyg_plugin_shortcode_poll_tips',
    'attributes callback' => 'mmorpg_wysiwyg_plugin_shortcode_poll_attributes',
  );

  $shortcodes['related-content'] = array(
    'title' => t('Related Content'),
    'description' => t('Add related content.'),
    'default settings' => array(),
    'process callback' => 'mmorpg_wysiwyg_plugin_shortcode_related_content',
    'tips callback' => 'mmorpg_wysiwyg_plugin_shortcode_related_content_tips',
  );

  $shortcodes['play-now'] = array(
    'title' => t('Play Now'),
    'description' => t('Add play now.'),
    'default settings' => array(),
    'process callback' => 'mmorpg_wysiwyg_plugin_shortcode_play_now',
    'tips callback' => 'mmorpg_wysiwyg_plugin_shortcode_play_now_tips',
  );

  return $shortcodes;
}

function mmorpg_wysiwyg_plugin_shortcode_poll_attributes($form, $form_state) {
  $form['poll_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Poll ID'),
    '#size' => 60,
    '#maxlength' => 60,
    '#states' => array(
      'visible' => array(
        ':input[name="shortcode"]' => array('value' => 'poll'),
      ),
    ),
  );
  return $form;
}

function mmorpg_wysiwyg_plugin_shortcode_poll_tips() {
  return '<strong>[poll poll_id="POLL ID HERE"][/poll]</strong>';
}

function mmorpg_wysiwyg_plugin_shortcode_related_content_tips() {
  return '<strong>[related-content][/related-content]</strong>';
}

function mmorpg_wysiwyg_plugin_shortcode_play_now_tips() {
  return '<strong>[play-now][/play-now]</strong>';
}

function mmorpg_wysiwyg_plugin_shortcode_poll($attrs, $text) {
  if (isset($attrs['poll_id'])) {
    $poll_id = $attrs['poll_id'];
    $pollim = pollim_load($poll_id);
    if (is_object($pollim)) {
      $poll = pollim_page_view($pollim);
      return render($poll);
    }
  }
  return '';
}

function mmorpg_wysiwyg_plugin_shortcode_related_content($attrs, $text) {
  // see mmorpg_article_node_view for the implementation.
  return '[related-content][/related-content]';
}

function mmorpg_wysiwyg_plugin_shortcode_play_now($attrs, $text) {
  $content = '';

  if (arg(0) == 'node' and is_numeric(arg(1))) {
    // we have the article id.
    //now get the game & official link.
    $result = db_select('field_data_field_game', 'game');
    $result->leftJoin('field_data_field_link', 'link', 'game.field_game_target_id = link.entity_id');
    $result = $result
      ->fields('game', array('field_game_target_id',))
      ->fields('link', array('field_link_url'))
      ->condition('game.entity_id', arg(1))
      ->execute()
      ->fetchAssoc();
    $game_id = $result['field_game_target_id'];
    $official_url = $result['field_link_url'];
  }
  elseif (arg(0) == 'node' and arg(1) == 'add') {
    $game_id = $_POST['field_game']['und'];
    // we have the game id.
    //now get the official link.
    $result = db_select('field_data_field_game', 'game');
    $result->leftJoin('field_data_field_link', 'link', 'game.field_game_target_id = link.entity_id');
    $result = $result
      ->fields('link', array('field_link_url'))
      ->condition('field_game_target_id', $game_id)
      ->execute()
      ->fetchAssoc();
    $official_url = $result['field_link_url'];
  }
  else {
    return $content;
  }

  //now get the list of sign up links.
  $result = db_select('node', 'node');
  $result->join('field_data_field_target_url', 'url', 'node.nid = url.entity_id');
  $result->join('field_data_field_game', 'game', 'node.nid = game.entity_id');
  $result->join('field_data_field_link_type', 'link', 'node.nid = link.entity_id');
  $result = $result
    ->fields('url', array(
      'field_target_url_title',
      'field_target_url_pixel_url',
      'field_target_url_link_url',
    ))
    ->fields('link', array(
      'field_link_type_value',
    ))
    ->condition('status', NODE_PUBLISHED)
    ->condition('type', 'signup_now_link')
    ->condition('field_game_target_id', $game_id)
    ->orderBy('created')
    ->range(0, 1)
    ->execute()
    ->fetchAssoc();
  if ($result) {
    switch ($result['field_link_type_value']) {
      case 'playnow':
        $official_text = 'Play Now';
        break;
      case 'buynow':
        $official_text = 'Buy Now';
        break;
      case 'preorder':
        $official_text = 'Pre-Order Now';
        break;
    }
    return clickmeter_link_render_item_as_link(
      $official_text,
      NULL,
      $result['field_target_url_link_url'],
      $result['field_target_url_pixel_url']
    );
  }
  return l('Play Now', $official_url, array('target' => '_blank'));
}
